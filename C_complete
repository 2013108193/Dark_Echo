/* Dark_Echo

2015.7.24 22:00~*/

#include<stdio.h>
#include<time.h>
#include<stdlib.h>
#include<Windows.h> // cls, 콘솔창 색상 변경등에 사용되는 함수가 정의되어있음
#include<conio.h>   // getch(), kbhit() 함수등이 정의되어 있으며 대체되는 헤더파일은 없는걸로 조사됨
					// getch() 또는 _getch() 함수는 키-버퍼에서 값을 1개 빼내 그 값을 아스키 코드로 리턴해주며 값이 없을 경우, 키를 누를때 까지 대기
					// kbhit() 또는 _kbhit() 함수는 키-버퍼에 값이 들어있나 확인하고 있으면 1, 없으면 0을 리턴한다.

#define UP 72
#define DOWN 80
#define LEFT 75
#define RIGHT 77
#define ESC 27
#define MAP_X 54 // 맵의 가로 길이
#define MAP_Y 50 // 맵의 세로 길이
#define SIZE_X 10 // 마름모의 가로 크기
#define SIZE_Y 10 // 마름모의 세로 크기
#define TITLE_X 95
#define TITLE_Y 34



struct Move_Info
{
	int x;
	int y;
	int input;
} User, Devil, Devil1, Devil2;



void Draw_Map();
void Draw_Title();
void Game_Clear();
void SetUserPosition(int, int); //커서의 좌표를 지정하는 함수
void SetDevilPosition(int, int); //악마의 위치를 지정하는 함수
void SetDevil1Position(int, int);
void SetDevil2Position(int x, int y);
void Draw_Position(int, int); // 마름모를 그릴떄의 커서 위치
void SetTextcolor(unsigned short); // 텍스트의 색상 설정
void RemoveCursor(); // 커서 깜빡임 제거
void Game_Over();
void User_Move();
void Devil_Move();
void Menu();
void Start_Game();
void Devil1_Move();
void Devil2_Move();
void Echo(char map[MAP_Y][MAP_X], int, int);
void printdot(int, int, int);

int title[TITLE_Y][TITLE_X]=
{
	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,
	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,
	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,
	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,
	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,
	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,
	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,
	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,
	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,
	0,	0,	0,	0,	1,	1,	1,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	1,	0,	0,	0,	1,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	1,	0,	0,	0,	0,	0,	0,	1,	1,	0,	1,	0,	0,	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,
	0,	0,	0,	0,	1,	0,	1,	1,	0,	0,	0,	0,	0,	0,	0,	0,	1,	1,	1,	0,	0,	0,	0,	1,	0,	0,	0,	0,	1,	1,	0,	0,	1,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	1,	0,	0,	1,	0,	0,	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	1,	1,	0,	0,	1,	1,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,
	0,	0,	0,	0,	1,	0,	0,	1,	0,	0,	0,	0,	0,	0,	0,	0,	1,	1,	1,	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	1,	1,	0,	1,	0,	0,	0,	0,	1,	1,	0,	0,	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	1,	0,	0,	0,	1,	0,	0,	0,	0,	0,	0,	1,	0,	0,	0,	0,	1,	1,	0,	0,	0,	0,	1,	1,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,
	0,	0,	0,	0,	1,	0,	0,	1,	1,	0,	0,	0,	0,	0,	0,	1,	1,	0,	1,	1,	0,	0,	0,	1,	0,	0,	0,	0,	0,	0,	1,	0,	1,	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	0,	0,	0,	1,	1,	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	0,	1,	0,	0,	0,	1,	1,	0,	0,	0,	0,	0,	0,	1,	1,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,
	0,	0,	0,	0,	1,	0,	0,	0,	1,	1,	0,	0,	0,	0,	0,	1,	1,	0,	1,	1,	0,	0,	0,	1,	0,	0,	0,	0,	0,	0,	1,	0,	1,	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	0,	0,	1,	1,	0,	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	0,	1,	0,	0,	1,	1,	0,	0,	0,	0,	0,	0,	0,	0,	1,	1,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,
	0,	0,	0,	0,	1,	0,	0,	0,	0,	1,	1,	0,	0,	0,	0,	1,	0,	0,	0,	1,	0,	0,	0,	1,	0,	0,	0,	0,	0,	0,	1,	0,	1,	0,	0,	0,	1,	1,	0,	0,	0,	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	0,	1,	0,	0,	1,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,
	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	1,	0,	0,	0,	1,	1,	0,	0,	0,	1,	1,	0,	0,	1,	0,	0,	0,	0,	0,	0,	1,	0,	1,	0,	0,	0,	1,	0,	0,	0,	0,	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	0,	1,	1,	0,	0,	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	0,	1,	0,	1,	1,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	1,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,
	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	1,	0,	0,	0,	1,	1,	0,	0,	0,	1,	1,	0,	0,	1,	0,	0,	0,	0,	0,	0,	1,	0,	1,	0,	0,	1,	1,	0,	0,	0,	0,	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	0,	1,	1,	0,	0,	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	0,	1,	0,	1,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,
	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	1,	0,	0,	0,	1,	0,	0,	0,	0,	0,	1,	0,	0,	1,	0,	0,	0,	0,	0,	0,	1,	0,	1,	0,	0,	1,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	0,	1,	0,	1,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,
	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	1,	0,	0,	0,	1,	0,	0,	0,	0,	0,	1,	0,	0,	1,	0,	0,	0,	0,	0,	0,	1,	0,	1,	1,	1,	1,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	0,	1,	0,	1,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,
	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	1,	0,	0,	0,	1,	0,	0,	0,	0,	0,	1,	0,	0,	1,	0,	0,	0,	0,	1,	1,	1,	0,	1,	0,	0,	1,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	0,	1,	0,	1,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,
	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	1,	0,	0,	1,	1,	1,	1,	1,	1,	1,	1,	1,	0,	1,	0,	0,	0,	0,	1,	0,	0,	0,	1,	0,	0,	1,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	1,	0,	1,	0,	0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	1,	1,	1,	0,	1,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,
	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	1,	0,	0,	1,	1,	0,	0,	0,	0,	0,	1,	1,	0,	1,	1,	1,	1,	1,	1,	1,	0,	0,	1,	0,	0,	1,	1,	0,	0,	0,	0,	0,	0,	0,	0,
...

[메일의 일부입니다.]  전체 메일 보기

kihoon baek <masinogns@gmail.com>
15. 10. 1.

나에게 

void SetUserPosition(int, int); //커서의 좌표를 지정하는 함수
void SetDevilPosition(int, int); //악마의 위치를 지정하는 함수
void SetDevil1Position(int, int);
void SetDevil2Position(int x, int y);
void Draw_Position(int, int); // 마름모를 그릴떄의 커서 위치
void SetTextcolor(unsigned short); // 텍스트의 색상 설정
void RemoveCursor(); // 커서 깜빡임 제거
void Game_Over();
void User_Move();
void Devil_Move();
void Menu();
void Start_Game();
void Devil1_Move();
void Devil2_Move();
void Echo(char map[MAP_Y][MAP_X], int, int);
void printdot(int, int, int);


//100퍼센트 추가부분
int title[TITLE_Y][TITLE_X] =
{
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
};
//추가부분 100퍼센트
char map[MAP_Y][MAP_X] =

{
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1,
	1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,
	1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,
	1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,
	1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,
	1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,
	1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,
	1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1,
	1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1,
	1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1,
	1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1,
	1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,
	1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,
	1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,
	1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,
	1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,
	1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,
	1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,
	1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,
	1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,
	1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,
	1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,
	1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,
	1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,
	1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,
	1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1,
	1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1,
	1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1,
	1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
	1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
	1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
	1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 1, 0, 0, 1, 0, 0, 1,
	1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 1, 0, 0, 1, 0, 0, 1,
	1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 1, 0, 0, 1, 0, 0, 1,
	1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 1, 0, 0, 1, 0, 0, 1,
	1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 1, 0, 0, 1, 0, 0, 1,
	1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 1, 0, 0, 1, 0, 0, 1,
	1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 1, 0, 0, 1, 0, 0, 1,
	1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1,
	1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	//54번째 줄
}; // 아마도 화면을 스크롤 하는 함수는 존재하지 않는 것 같으니 맵의 길이를 줄여야 겠다. 마침 쓸데없이 길쭉한 구간이 있옹


void Start_Game()
{
	User.x = 1;
	User.y = 1;
	Devil.x = 51;
	Devil.y = 48;
	Devil1.x = 14;
	Devil1.y = 17;
	Devil2.x = 26;
	Devil2.y = 48;
	srand((unsigned)time(NULL));
	Devil.input = rand() % 4;
	system("cls");
	RemoveCursor();
	Draw_Map();
	SetTextcolor(15);
	SetUserPosition(User.x * 2, User.y);
	fputs("★", stdout);
	Echo(map, User.x - 4, User.y - 4);
	while (1)// 플레이어와 악마 동시에 구현
	{
		Devil2_Move();
		Devil1_Move();
		Devil_Move();
		User_Move();
		Echo(map, User.x - 4, User.y - 4);
		Sleep(60);
		if (((User.x == Devil.x) && (User.y == Devil.y)) || ((User.x == Devil1.x) && (User.y == Devil1.y)) || ((User.x == Devil2.x) && (User.y == Devil2.y)))
		{
			Game_Over();
		}
	}

}

void Draw_Map()
{
	int i, j;


	/*for(i=0;i<sizeof(map)/MAP_X;i++) //맵을 그리는 함수, 프로그램이 완성되는 순간 이 함수는 삭.제.한.다!
	{
	for(j=0;j<MAP_X;j++)
	{
	if(map[i][j]==1){
	SetTextcolor(8); //15는 밝은 흰색을 의미, 12는 밝은 빨간색
	fputs("■",stdout);
	}
	else if(map[i][j]==2){
	SetTextcolor(12);
	fputs("■",stdout);
	}
	else if(map[i][j]==3)
	{
	SetTextcolor(13);
	fputs("＠",stdout);
	}
	else
	fputs("  ",stdout);
	}
	fputs("\n",stdout);

	}*/
}

void User_Move()
{


	if (!_kbhit()) return;       //입력한 키가 없어도 넘어감

	else{
		User.input = _getch();
		if (User.input == ESC)
		{
			system("cls");
			Menu();
		}
		switch (User.input)
		{

		case UP:
			if (map[User.y - 1][User.x] != 1)
			{
				if (map[User.y - 1][User.x] == 2)
				{
					Game_Over();
				}
				else
				{
					SetUserPosition(User.x * 2, User.y);
					User.y--;
					SetUserPosition(User.x * 2, User.y);
				}
			}break;

		case DOWN:
			if (map[User.y + 1][User.x] != 1)
			{
				if (map[User.y + 1][User.x] == 2)
				{
					Game_Over();
				}
				else
				{
					SetUserPosition(User.x * 2, User.y);
					User.y++;
					SetUserPosition(User.x * 2, User.y);
				}
			}break;

		case RIGHT:
			if (map[User.y][User.x + 1] != 1)
			{
				if (map[User.y][User.x + 1] == 2)
				{
					Game_Over();
				}
				else
				{
					SetUserPosition(User.x * 2, User.y);
					User.x++;
					SetUserPosition(User.x * 2, User.y);
				}
			}break;

		case LEFT:
			if (map[User.y][User.x - 1] != 1)
			{
				if (map[User.y][User.x - 1] == 2)
				{
					Game_Over();
				}
				else
				{
					SetUserPosition(User.x * 2, User.y);
					User.x--;
					SetUserPosition(User.x * 2, User.y);
				}
			}break;
		}
	}
}



void Devil_Move()
{	// 방향키를 랜덤으로 입력받으면 제자리에서 맴도는것처럼 되므로 벽이 막히면 다른길로가는 걸로 인공지능을 뙇!


	SetDevilPosition(Devil.x, Devil.y);
	switch (Devil.input) {
	case 0:	//위로 갈때
		if (map[Devil.y - 1][Devil.x] == 3)
		{
			SetDevilPosition(Devil.x * 2, Devil.y);
			//	fputs(" ",stdout);
			Devil.y--;
			SetDevilPosition(Devil.x * 2, Devil.y);
			//	fputs("§",stdout);
			Devil.input = rand() % 4;
		}
		else if (map[Devil.y - 1][Devil.x] != 1 && map[Devil.y - 1][Devil.x] != 2){
			SetDevilPosition(Devil.x * 2, Devil.y);
			//	fputs(" ",stdout);
			Devil.y--;
			SetDevilPosition(Devil.x * 2, Devil.y);
			//	fputs("§",stdout);
		}
		else{
			do{
				Devil.input = rand() % 4;
			} while (Devil.input == 0 || Devil.input == 1);
		}break;

	case 1: 	//아래로 갈때
		if (map[Devil.y + 1][Devil.x] == 3)
		{
			SetDevilPosition(Devil.x * 2, Devil.y);
			//	fputs(" ",stdout);
			Devil.y++;
			SetDevilPosition(Devil.x * 2, Devil.y);
			fputs("§", stdout);
			//	Devil.input=rand()%4;
		}

		else if (map[Devil.y + 1][Devil.x] != 1 && map[Devil.y + 1][Devil.x] != 2){
			SetDevilPosition(Devil.x * 2, Devil.y);
			//	fputs(" ",stdout);
			Devil.y++;
			SetDevilPosition(Devil.x * 2, Devil.y);
			//	fputs("§",stdout);
		}
		else{
			do{
				Devil.input = rand() % 4;
			} while (Devil.input == 0 || Devil.input == 1);
		}break;

	case 2: 	//오른쪽으로 갈때
		if (map[Devil.y][Devil.x + 1] == 3)
		{
			SetDevilPosition(Devil.x * 2, Devil.y);
			//	fputs(" ",stdout);
			Devil.x++;
			SetDevilPosition(Devil.x * 2, Devil.y);
			//	fputs("§",stdout);
			Devil.input = rand() % 4;
		}

		else if (map[Devil.y][Devil.x + 1] != 1 && map[Devil.y][Devil.x + 1] != 2){
			SetDevilPosition(Devil.x * 2, Devil.y);
			//	fputs(" ",stdout);
			Devil.x++;
			SetDevilPosition(Devil.x * 2, Devil.y);
			//	fputs("§",stdout);
		}

		else{
			do{
				Devil.input = rand() % 4;
			} while (Devil.input == 2 || Devil.input == 3);
		}break;

	case 3: 	//왼쪽으로 갈때
		if (map[Devil.y][Devil.x - 1] == 3)
		{
			SetDevilPosition(Devil.x * 2, Devil.y);
			//	fputs(" ",stdout);
			Devil.x--;
			SetDevilPosition(Devil.x * 2, Devil.y);
			//	fputs("§",stdout);
			Devil.input = rand() % 4;
		}

		else if (map[Devil.y][Devil.x - 1] != 1 && map[Devil.y][Devil.x - 1] != 2){
			SetDevilPosition(Devil.x * 2, Devil.y);
			//	fputs(" ",stdout);
			Devil.x--;
			SetDevilPosition(Devil.x * 2, Devil.y);
			//	fputs("§",stdout);

		}
		else{
			do{
				Devil.input = rand() % 4;
			} while (Devil.input == 2 || Devil.input == 3);
		}break;


	}
}

void Devil1_Move()
{	// 방향키를 랜덤으로 입력받으면 제자리에서 맴도는것처럼 되므로 벽이 막히면 다른길로가는 걸로 인공지능을 뙇!


	SetDevil1Position(Devil1.x, Devil1.y);
	switch (Devil1.input) {
	case 0:	//위로 갈때
		if (map[Devil1.y - 1][Devil1.x] == 3)
		{
			SetDevil1Position(Devil1.x * 2, Devil1.y);
			//	fputs(" ",stdout);
			Devil1.y--;
			SetDevil1Position(Devil1.x * 2, Devil1.y);
			//	fputs("§",stdout);
			Devil1.input = rand() % 4;
		}

		else if (map[Devil1.y - 1][Devil1.x] != 1 && map[Devil1.y - 1][Devil1.x] != 2){
			SetDevil1Position(Devil1.x * 2, Devil1.y);
			//	fputs(" ",stdout);
			Devil1.y--;
			SetDevil1Position(Devil1.x * 2, Devil1.y);
			//	fputs("§",stdout);
		}
		else{
			do{
				Devil1.input = rand() % 4;
			} while (Devil1.input == 0 || Devil1.input == 1);
		}break;

	case 1: 	//아래로 갈때
		if (map[Devil1.y + 1][Devil1.x] == 3)
		{
			SetDevil1Position(Devil1.x * 2, Devil1.y);
			//	fputs(" ",stdout);
			Devil1.y++;
			SetDevil1Position(Devil1.x * 2, Devil1.y);
			//	fputs("§",stdout);
			Devil1.input = rand() % 4;
		}

		else if (map[Devil1.y + 1][Devil1.x] != 1 && map[Devil1.y + 1][Devil1.x] != 2){
			SetDevil1Position(Devil1.x * 2, Devil1.y);
			//	fputs(" ",stdout);
			Devil1.y++;
			SetDevil1Position(Devil1.x * 2, Devil1.y);
			//	fputs("§",stdout);
		}
		else{
			do{
				Devil1.input = rand() % 4;
			} while (Devil1.input == 0 || Devil1.input == 1);
		}break;

	case 2: 	//오른쪽으로 갈때
		if (map[Devil1.y][Devil1.x + 1] == 3)
		{
			SetDevil1Position(Devil1.x * 2, Devil1.y);
			//	fputs(" ",stdout);
			Devil1.x++;
			SetDevil1Position(Devil1.x * 2, Devil1.y);
			//	fputs("§",stdout);
			Devil1.input = rand() % 4;
		}

		else if (map[Devil1.y][Devil1.x + 1] != 1 && map[Devil1.y][Devil1.x + 1] != 2){
			SetDevil1Position(Devil1.x * 2, Devil1.y);
			//	fputs(" ",stdout);
			Devil1.x++;
			SetDevil1Position(Devil1.x * 2, Devil1.y);
			//	fputs("§",stdout);
		}
		else{
			do{
				Devil1.input = rand() % 4;
			} while (Devil1.input == 2 || Devil1.input == 3);
		}break;

	case 3: 	//왼쪽으로 갈때
		if (map[Devil1.y][Devil1.x - 1] == 3)
		{
			SetDevil1Position(Devil1.x * 2, Devil1.y);
			//	fputs(" ",stdout);
			Devil1.x--;
			SetDevil1Position(Devil1.x * 2, Devil1.y);
			//	fputs("§",stdout);
			Devil1.input = rand() % 4;
		}

		else if (map[Devil1.y][Devil1.x - 1] != 1 && map[Devil1.y][Devil1.x - 1] != 2){
			SetDevil1Position(Devil1.x * 2, Devil1.y);
			//	fputs(" ",stdout);
			Devil1.x--;
			SetDevil1Position(Devil1.x * 2, Devil1.y);
			//	fputs("§",stdout);

		}
		else{
			do{
				Devil1.input = rand() % 4;
			} while (Devil1.input == 2 || Devil1.input == 3);
		}break;


	}
}

void Devil2_Move()
{	// 방향키를 랜덤으로 입력받으면 제자리에서 맴도는것처럼 되므로 벽이 막히면 다른길로가는 걸로 인공지능을 뙇!


	SetDevil2Position(Devil2.x, Devil2.y);
	switch (Devil2.input) {
	case 0:	//위로 갈때
		if (map[Devil2.y - 1][Devil2.x] == 3)
		{
			SetDevil2Position(Devil2.x * 2, Devil2.y);
			//	fputs(" ",stdout);
			Devil2.y--;
			SetDevil2Position(Devil2.x * 2, Devil2.y);
			//	fputs("§",stdout);
			Devil2.input = rand() % 4;
		}
		else if (map[Devil2.y - 1][Devil2.x] != 1 && map[Devil2.y - 1][Devil2.x] != 2){
			SetDevil2Position(Devil2.x * 2, Devil2.y);
			//	fputs(" ",stdout);
			Devil2.y--;
			SetDevil2Position(Devil2.x * 2, Devil2.y);
			//	fputs("§",stdout);
		}
		else{
			do{
				Devil2.input = rand() % 4;
			} while (Devil2.input == 0 || Devil2.input == 1);
		}break;

	case 1: 	//아래로 갈때
		if (map[Devil2.y + 1][Devil2.x] == 3)
		{
			SetDevil2Position(Devil2.x * 2, Devil2.y);
			//	fputs(" ",stdout);
			Devil2.y++;
			SetDevil2Position(Devil2.x * 2, Devil2.y);
			//	fputs("§",stdout);
			Devil2.input = rand() % 4;
		}

		else if (map[Devil2.y + 1][Devil2.x] != 1 && map[Devil2.y + 1][Devil2.x] != 2){
			SetDevil2Position(Devil2.x * 2, Devil2.y);
			//	fputs(" ",stdout);
			Devil2.y++;
			SetDevil2Position(Devil2.x * 2, Devil2.y);
			//	fputs("§",stdout);
		}
		else{
			do{
				Devil2.input = rand() % 4;
			} while (Devil2.input == 0 || Devil2.input == 1);
		}break;

	case 2: 	//오른쪽으로 갈때
		if (map[Devil2.y][Devil2.x + 1] == 3)
		{
			SetDevil2Position(Devil2.x * 2, Devil2.y);
			//	fputs(" ",stdout);
			Devil2.x++;
			SetDevil2Position(Devil2.x * 2, Devil2.y);
			//	fputs("§",stdout);
			Devil2.input = rand() % 4;
		}

		else if (map[Devil2.y][Devil2.x + 1] != 1 && map[Devil2.y][Devil2.x + 1] != 2){
			SetDevil2Position(Devil2.x * 2, Devil2.y);
			//	fputs(" ",stdout);
			Devil2.x++;
			SetDevil2Position(Devil2.x * 2, Devil2.y);
			//	fputs("§",stdout);
		}

		else{
			do{
				Devil2.input = rand() % 4;
			} while (Devil2.input == 2 || Devil2.input == 3);
		}break;

	case 3: 	//왼쪽으로 갈때
		if (map[Devil2.y][Devil2.x - 1] == 3)
		{
			SetDevil2Position(Devil2.x * 2, Devil2.y);
			//	fputs(" ",stdout);
			Devil2.x--;
			SetDevil2Position(Devil2.x * 2, Devil2.y);
			//	fputs("§",stdout);
			Devil2.input = rand() % 4;
		}

		else if (map[Devil2.y][Devil2.x - 1] != 1 && map[Devil2.y][Devil2.x - 1] != 2){
			SetDevil2Position(Devil2.x * 2, Devil2.y);
			//	fputs(" ",stdout);
			Devil2.x--;
			SetDevil2Position(Devil2.x * 2, Devil2.y);
			//	fputs("§",stdout);

		}
		else{
			do{
				Devil2.input = rand() % 4;
			} while (Devil2.input == 2 || Devil2.input == 3);
		}break;


	}
}


void SetUserPosition(int x, int y)
{
	COORD cur;
	cur.X = x;
	cur.Y = y;
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), cur);

}


void SetDevil1Position(int x, int y)
{
	COORD Coo_Devil1 = { x, y };
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), Coo_Devil1);
}

void SetDevilPosition(int x, int y)
{
	COORD Coo_Devil = { x, y };
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), Coo_Devil);
}

void SetDevil2Position(int x, int y)
{
	COORD Coo_Devil2 = { x, y };
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), Coo_Devil2);
}

void Draw_Position(int x, int y)
{
	COORD Draw = { x, y };
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), Draw);
}



void SetTextcolor(unsigned short color)
{
	SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), color);        //http://blog.naver.com/sorani81/150052022044 << 콘솔창 색상지정
}


void RemoveCursor()
{
	CONSOLE_CURSOR_INFO curinfo;
	GetConsoleCursorInfo(GetStdHandle(STD_OUTPUT_HANDLE), &curinfo);
	curinfo.bVisible = 0;
	SetConsoleCursorInfo(GetStdHandle(STD_OUTPUT_HANDLE), &curinfo);
}

void Game_Over()
{
	system("cls");
	SetUserPosition(35, 25);
	puts("GAME OVER!!");
	exit(1);
}




void Echo(char map[MAP_Y][MAP_X], int x, int y)
{
	char shape[SIZE_Y][SIZE_X] = {
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 },
		{ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 },
		{ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 },
		{ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 },
		{ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 },
		{ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 },
		{ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 },
		{ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
	};
	int i, j;
	for (j = 0; j<SIZE_Y; j++)
	{
		for (i = 0; i<SIZE_X; i++)
		{
			if (i == 4 && j == 4)
				fputs("★", stdout);
			else if ((Devil.x == x + i && Devil.y == y + j) || (Devil1.x == x + i && Devil1.y == y + j) || (Devil2.x == x + i && Devil2.y == y + j))
			{
				SetTextcolor(12);
				fputs("§", stdout);
				SetTextcolor(15);
			}
			else if (map[y + j][x + i] == 1 && shape[j][i] == 1)
				printdot(x + i, y + j, 1);
			else if (map[y + j][x + i] == 0 && shape[j][i] == 1)
				printdot(x + i, y + j, 2);
			else if (map[y + j][x + i] == 2 && shape[j][i] == 1)
				printdot(x + i, y + j, 3);
			else
			{
				if (j + y >= 0 && j + y<MAP_Y && i + x >= 0 && i + x<MAP_X)
					printdot(x + i, y + j, 2);
				else
					printdot(x + i, y + j, 2);
			}
		}
	}
}

void printdot(int x, int y, int result)
{
	if (x >= 0 && x<MAP_X * 2 && y >= 0 && y<MAP_Y)
	{
		Draw_Position(x * 2, y);
		if (result == 1) fputs("■", stdout);
		else if (result == 2) fputs("  ", stdout);
		else if (result == 3)
		{
			SetTextcolor(12);
			fputs("■", stdout);
			SetTextcolor(15);
		}
	}
}
이게 게임 헤더 부분이고







#define _WINSOCK_DEPRECATED_NO_WARNINGS
#pragma comment(lib, "Ws2_32.lib")

//소켓 관련 헤더
#include <WinSock2.h> //windows.h 보다 위에 있어야한다.
//송현우 게임 헤더
#include "Header.h"
#include<string.h>
#pragma warning(disable:4996)

void Menu();
void Signup();
void Login();
void AfterLogin();
void Draw_Title();//100퍼센트 추가부분
void ErrorHandling(char * message);

SOCKET hSocket;
int Auth; //서버로부터 각각의 함수 실행 후 인증 값 받아오기
typedef struct User
{
	char UserId[20];
	char UserPw[20];
}UserInfo;
UserInfo Acnt;

int main(int argc, char* argv[])
{
	WSADATA wsaData;
	SOCKADDR_IN servAddr;

	if (argc != 3)
	{
		printf("Usage : %s <IP> <PORT> \n", argv[0]);
		exit(1);
	}

	if (WSAStartup(MAKEWORD(2, 2), &wsaData) != 0)
		ErrorHandling("WSAStartup() error!");

	hSocket = socket(PF_INET, SOCK_STREAM, 0);
	if (hSocket == INVALID_SOCKET)
		ErrorHandling("Socket() error!");

	memset(&servAddr, 0, sizeof(servAddr));
	servAddr.sin_family = AF_INET;
	servAddr.sin_addr.s_addr = inet_addr(argv[1]);
	servAddr.sin_port = htons(atoi(argv[2]));

	if (connect(hSocket, (SOCKADDR*)&servAddr, sizeof(servAddr)) == SOCKET_ERROR)
		ErrorHandling("Connect() error!");

	//==============연결된 이후의 영역=================
	system("cls");
	SetUserPosition(30, 7);
	printf("==========================================\n");
	SetUserPosition(30, 8);
	printf("====서버와 정상적으로 연결되었습니다.=====\n");
	SetUserPosition(30, 9);
	printf("==========================================\n");
	Sleep(1500);
	system("cls");

	//송현우 게임 소스
	system("mode con:cols=190 lines=55"); //Start_Game() is game start function
	while (1)
	{
		Draw_Title();
		//Menu();
	}

	system("cls");

	closesocket(hSocket);
	WSACleanup();
	return 0;
}

void Menu()
{
	int input = 0;
	Auth = 0; //auth 0 은 처음 메뉴

	do{
		system("cls");
		SetUserPosition(30, 7);
		puts("1. 회원가입");
		SetUserPosition(30, 8);
		puts("2. 로그인");
		SetUserPosition(30, 9);
		puts("3. 게임종료");

		SetUserPosition(30, 12);
		printf("숫자를 선택해주세요 >> ");
		scanf("%d", &input);

		send(hSocket, (int*)&input, sizeof(int), 0);

		switch (input)
		{
		case 1: Signup(); break;
		case 2: Login(); break;
		case 3: exit(0); system("cls"); break;

		default: puts("다시 입력 하시오.\n");
		}
	} while ((input >= 1 || input<4) && input != 3);
}

void ErrorHandling(char * message)
{
	fputs(message, stderr);
	fputc('\n', stderr);
	exit(1);
}

/*
** :: 게임 로그인, 회원가입 로직 짜기
*/
void Signup()
{
	char correct[2];

	while (1)
	{
		system("cls");
		SetUserPosition(30, 7);
		puts("==============================\n");
		SetUserPosition(30, 8);
		puts("==========회원 가입===========\n");
		SetUserPosition(30, 9);
		puts("==============================\n");
		SetUserPosition(30, 10);
		printf("아이디를 입력하세요 : ");
		scanf("%s", Acnt.UserId);
		SetUserPosition(30, 11);
		printf("비밀번호를 입려하세요 : ");
		scanf("%s", Acnt.UserPw);
		SetUserPosition(30, 13);
		printf("가입하시겠습니까? (Y or N) ");
		scanf("%s", correct);

		if (strcmp(correct, "y") || strcmp(correct, "Y") != 0) //y이면 break n이면 continue
			break;
		else
			continue;
	}
	send(hSocket, (void*)&Acnt.UserId, sizeof(Acnt.UserId), 0); //서버에 입력받은 아이디 보내기
	send(hSocket, (void*)&Acnt.UserPw, sizeof(Acnt.UserPw), 0); //서버에 입력받은 패스워드 보내기

	recv(hSocket, (int*)&Auth, sizeof(int), 0);//서버로부터의 인증값
	if (Auth == 11) //서버에서 11을 보내면 회원가입 정상 처리
	{
		system("cls");
		SetUserPosition(30, 7);
		puts("회원가입이 정상적으로 처리되었습니다.");
		Sleep(1000);
	}
	else
	{
		system("cls");
		SetUserPosition(30, 7);
		puts("회원가입을 실패했습니다. 다시 해주세요.");
		Sleep(1000);
	}
}


void Login()
{
	system("cls");
	SetUserPosition(30, 7);
	puts("==============================\n");
	SetUserPosition(30, 8);
	puts("============로그인===========\n");
	SetUserPosition(30, 9);
	puts("==============================\n");
	SetUserPosition(30, 10);
	printf("아이디를 입력하세요 : ");
	scanf("%s", Acnt.UserId);
	SetUserPosition(30, 11);
	printf("비밀번호를 입려하세요 : ");
	scanf("%s", Acnt.UserPw);

	send(hSocket, (void*)&Acnt.UserId, sizeof(Acnt.UserId), 0); //서버에 입력받은 아이디 보내기
	send(hSocket, (void*)&Acnt.UserPw, sizeof(Acnt.UserPw), 0); //서버에 입력받은 패스워드 보내기

	recv(hSocket, (int*)&Auth, sizeof(int), 0);//서버로부터의 인증값
	if (Auth == 21) //서버에서 21을 보내면 로그인 정상 처리
	{
		system("cls");
		SetUserPosition(30, 7);
		puts("로그인이 정상적으로 처리되었습니다.");
		Sleep(1000);
		//메뉴 1. 게임실행 AND 2. 로그아웃
		AfterLogin();
	}
	else
	{
		system("cls");
		SetUserPosition(30, 7);
		puts("로그인을 실패했습니다. 아이디를 확인해주세요.");
		Sleep(1000);
	}
	/*
	else if (Auth == 22)
	{
	system("cls");
	SetUserPosition(30, 7);
	puts("로그인을 실패했습니다. 아이디를 확인해주세요.");
	Sleep(1000);
	}
	else //Auth 23 비밀번호 틀림
	{
	system("cls");
	SetUserPosition(30, 7);
	puts("로그인을 실패했습니다. 비밀번호를 확인해주세요.");
	Sleep(1000);
	}
	*/

}

void AfterLogin()
{
	int input;
	//메뉴 1. 게임실행 AND 2. 로그아웃 AND 3. 게임종료

	do
	{
		system("cls");
		SetUserPosition(30, 7);
		puts("1. 게임 실행");
		SetUserPosition(30, 8);
		puts("2. 로그 아웃");
		SetUserPosition(30, 9);
		puts("3. 게임 종료");
		SetUserPosition(30, 11);
		printf("숫자를 선택해주세요 >> ");
		scanf("%d", &input);

		switch (input)
		{
		case 1: Start_Game(); break;
		case 2: Menu(); break;
		case 3: exit(0); system("cls"); break;

		default: SetUserPosition(30, 7); puts("다시 입력 하시오.\n"); break;
		}
	} while (input < 1 || input>3);
}

void Draw_Title()
{
	int i, j;
	SetTextcolor(8);
	for (j = 0; j<TITLE_Y; j++)
	{
		for (i = 0; i<TITLE_X; i++)
		{
			if (title[j][i] == 1)
				printf("■");
			else
				printf("  ");
		}
		printf("\n");
	}
	SetTextcolor(15);
	SetUserPosition(TITLE_X / 2 + 25, TITLE_Y + 2);
	Sleep(2000);
	system("cls");
	Menu();
}
